#server.servlet.context-path=/web
server.port=8080

# 数据库访问配置, 使用druid数据源
# type: com.alibaba.druid.pool.DruidDataSource
spring.datasource.druid.validation-query: SELECT 1 FROM DUAL
spring.datasource.druid.driver-class-name: com.mysql.cj.jdbc.Driver
spring.datasource.druid.url: jdbc:mysql://182.254.171.130:3306/springbootlearn?useUnicode=true&&characterEncoding=UTF8
spring.datasource.druid.username: root
spring.datasource.druid.password: Xzz18110964812
# 连接池配置
spring.datasource.druid.initial-size: 5
spring.datasource.druid.min-idle: 5
spring.datasource.druid.max-active: 20
# 连接等待超时时间
spring.datasource.druid.max-wait: 30000
# 配置检测可以关闭的空闲连接间隔时间
spring.datasource.druid.time-between-eviction-runs-millis: 60000
# 配置连接在池中的最小生存时间
spring.datasource.druid.min-evictable-idle-time-millis: 300000
spring.datasource.druid.test-while-idle: true
spring.datasource.druid.test-on-borrow: false
spring.datasource.druid.test-on-return: false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.druid.pool-prepared-statements: true
spring.datasource.druid.max-open-prepared-statements: 20
spring.datasource.druid.max-pool-prepared-statement-per-connection-size: 20
# 配置监控统计拦截的filters, 去掉后监控界面sql无法统计, 'wall'用于防火墙
spring.datasource.druid.filters: stat,wall
# Spring监控AOP切入点，如x.y.z.service.*,配置多个英文逗号分隔
spring.datasource.druid.aop-patterns: com.*.servie.*


# WebStatFilter配置
spring.datasource.druid.web-stat-filter.enabled: true
# 添加过滤规则
spring.datasource.druid.web-stat-filter.url-pattern: /*
# 忽略过滤的格式
spring.datasource.druid.web-stat-filter.exclusions: '*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*'

# StatViewServlet配置
spring.datasource.druid.stat-view-servlet.enabled: true
# 访问路径为/druid时，跳转到StatViewServlet
spring.datasource.druid.stat-view-servlet.url-pattern: /druid/*
# 是否能够重置数据
spring.datasource.druid.stat-view-servlet.reset-enable: false
# 需要账号密码才能访问控制台
spring.datasource.druid.stat-view-servlet.login-username: druid
spring.datasource.druid.stat-view-servlet.login-password: druid123
# IP白名单
# allow: 127.0.0.1
#　IP黑名单（共同存在时，deny优先于allow）
# deny: 192.168.1.218

# 配置StatFilter
spring.datasource.druid.filter.stat.log-slow-sql: true

mybatis.mapper-locations=classpath:mapper/*.xml

logging.level.com.xzz.springboot.learn.mybatis.mapper:debug

#spring.mvc.view.prefix=/templates
#spring.mvc.view.suffix=.jsp



#开启模板缓存（默认值：true）
#spring.thymeleaf.cache=true
#Check that the template exists before rendering it.
#spring.thymeleaf.check-template=true
#检查模板位置是否正确（默认值:true）
#spring.thymeleaf.check-template-location=true
#Content-Type的值（默认值：text/html）
#spring.thymeleaf.servlet.content-type=text/html
#开启MVC Thymeleaf视图解析（默认值：true）
#spring.thymeleaf.enabled=true
#模板编码
#spring.thymeleaf.encoding=UTF-8
#要被排除在解析之外的视图名称列表，用逗号分隔
#spring.thymeleaf.excluded-view-names=
#要运用于模板之上的模板模式。另见StandardTemplate-ModeHandlers(默认值：HTML5)
#spring.thymeleaf.mode=HTML5
#在构建URL时添加到视图名称前的前缀（默认值：classpath:/templates/）
#spring.thymeleaf.prefix=classpath:/templates/
#在构建URL时添加到视图名称后的后缀（默认值：.html）
#spring.thymeleaf.suffix=.html
#Thymeleaf模板解析器在解析器链中的顺序。默认情况下，它排第一位。顺序从1开始，只有在定义了额外的TemplateResolver Bean时才需要设置这个属性。
#spring.thymeleaf.template-resolver-order=
#可解析的视图名称列表，用逗号分隔
#spring.thymeleaf.view-names=
